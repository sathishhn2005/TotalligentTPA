@model Totalligent.BusinessEntities.ClientCompanyMaster
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ClientCompanyMaster</h4>
    <hr />

    <div>
        @using (Html.BeginForm("BulkUpload", "Agent", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <input type="file" name="postedFile" accept=".xls,.xlsx" />
            <input type="submit" value="Import" />
            <a href="~/Masters/ClientMaster.xlsx" download>Download Sample format</a>
        }
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientCompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClientCompanyName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClientCompanyName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Currency, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Provider, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Provider, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Provider, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProviderCommission, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProviderCommission, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProviderCommission, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReInsurer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReInsurer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReInsurer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReInsurerRate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReInsurerRate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReInsurerRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="btnClientMaster" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
<script type="text/javascript">

    $(function () {
        $('#btnClientMaster').click(function (e) {
            e.preventDefault();
            var formData = new FormData();
            formData.append("ClientCompanyName", $("#ClientCompanyName").val());
            formData.append("Address", $("#Address").val());
            formData.append("City", $("#City").val());
            formData.append("State", $("#State").val());
            formData.append("Zipcode", $("#Zipcode").val());
            formData.append("ContactPerson", $("#ContactPerson").val());
            formData.append("MobileNumber", $("#MobileNumber").val());
            formData.append("EmailId", $("#EmailId").val());
            formData.append("Currency", $("#Currency").val());
            formData.append("Provider", $("#Provider").val());
            formData.append("ProviderCommission", $("#ProviderCommission").val());
            formData.append("ReInsurer", $("#ReInsurer").val());
            formData.append("ReInsurerRate", $("#ReInsurerRate").val());
            
            $.ajax({
                type: "POST",
                url: "/ClientCompany/Create",
                data: formData,
                dataType: "json",
                // contentType: 'application/json;charset=utf-8',
                cache: false,
                contentType: false,
                processData: false,
                success: function (res) {
                    if (res > 0) {
                        $('#dialogClient').data("kendoDialog").open();
                        $("#lblMessage").html('Insurance Company Registered Successfully.!');
                    }
                    else {
                        $('#dialogClient').data("kendoDialog").open();
                        $("#lblMessage").html('Insurance Company not Registered Successfully.!');
                    }
                },
                error: function () {
                    $("#lblMessage").html('Error while Registring the Insurance Company!.');
                }
            })
        })
    });
</script>