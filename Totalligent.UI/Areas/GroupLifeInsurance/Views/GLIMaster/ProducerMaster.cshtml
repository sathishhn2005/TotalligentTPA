
@model Totalligent.UI.Models.ProducerMasterModel
@using Totalligent.BusinessEntities;

@{ ViewBag.Title = "ProducerMaster";
    Layout = "~/Areas/GroupLifeInsurance/Views/Shared/_Layout.cshtml"; }



@Html.AntiForgeryToken()
<div class="p-t-30">
    <div class="box">
        <div class="box-header with-border">
            <ul class="nav nav-pills justify-content-center mb-0">
                <li class=" nav-item flex-fill text-center"> <a href="#navpills2-1" id="anavpills2-1" class="nav-link active" data-toggle="tab" aria-expanded="false"><i class="fa fa-building-o mr-3"></i>Producer Master</a> </li>
                <li class="nav-item flex-fill text-center"> <a href="#navpills2-2" id="anavpills2-2" class="nav-link" data-toggle="tab" aria-expanded="false"><i class="fa fa-search mr-3"></i>Search Producer Master</a> </li>
            </ul>
        </div>
        <div class="box-body">
            <div class="tab-content">
                <div id="navpills2-1" class="tab-pane active">
                    <form id="formProducer">
                        @TempData["Alertmsg"];
                        @{ TempData.Keep("PMFolderName");}
                        <div class="row">
                            <div class="col-12 col-md-6">
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <h4 class="col-sm-12 font-weight-bold text-center">Producer's Basic Details</h4>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="col-form-label text-md-right w-full">
                                                Business Type
                                            </label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.DropDownList("MasterType", Model.lstBusinessTypeMaster, "-- Select Type --", new { @class = "form-control" })

                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="col-form-label text-md-right w-full">Name</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => Model.lstProducerMaster[0].ProducerName, new { @id = "txtProducerMaster", @class = "form-control w-full", @placeholder = "Enter Producer Name", @maxlength = "255" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="col-form-label text-md-right w-full">Contact Person</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => Model.lstProducerMaster[0].ContactPerson, new { @id = "txtContactPerson", @class = "form-control w-full", @placeholder = "Enter Contact Person Name", @maxlength = "255" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="col-form-label text-md-right w-full">Mobile Number</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => Model.lstProducerMaster[0].MobileNumber, new { @id = "txtMobileNumber", @class = "form-control w-full", @placeholder = "Enter Mobile Number", @type = "number", @maxlength = "10" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="col-form-label text-md-right w-full">EmailId</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => Model.lstProducerMaster[0].EmailId, new { @id = "txtEmailId", @class = "form-control w-full", @placeholder = "Enter Email ID", @maxlength = "255" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="col-form-label text-md-right w-full">Address</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => Model.lstProducerMaster[0].Address, new { @id = "txtAddress", @class = "form-control w-full", @placeholder = "Enter Address", @maxlength = "255" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="col-form-label text-md-right w-full">City</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => Model.lstProducerMaster[0].City, new { @id = "txtCity", @class = "form-control w-full", @placeholder = "Enter City Name", @maxlength = "255" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="col-form-label text-md-right w-full">State</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => Model.lstProducerMaster[0].State, new { @id = "txtState", @class = "form -control w-full", @placeholder = "Enter State Name", @maxlength = "255" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="col-form-label text-md-right w-full">Zipcode</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => Model.lstProducerMaster[0].Zipcode, new { @id = "txtZipcode", @class = "form -control w-full", @placeholder = "Enter Zipcode", @maxlength = "15" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-md-6">
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-12 col-md-10">
                                            <h4 class="col-sm-12 font-weight-bold text-center">Producer's Account Details</h4>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <label for="BankName" class="col-form-label text-md-right w-full">Bank Name</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.DropDownList("BankName", Model.lstBankMaster, "-- Select Bank --", new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <label class="col-form-label text-md-right w-full">Account Number</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => Model.lstProducerMaster[0].AccountNumber, new { @id = "txtAccountNumber", @class = "form-control w-full", @placeholder = "Enter Account Number", @maxlength = "255" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <label class="col-form-label text-md-right w-full">Repeat Account Number</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.Password("RepeatAccountNumber", "", new { @id = "txtRepeatAccountNumber", @class = "form-control w-full", @placeholder = "Enter Account Number", @maxlength = "20" })

                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <label class="col-form-label text-md-right w-full">IFSC Code</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => Model.lstProducerMaster[0].IFSCCode, new { @id = "txtIFSCCode", @class = "form -control w-full", @placeholder = "Enter IFSC Code", @maxlength = "20" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <label class="col-form-label text-md-right w-full">Upload KYC</label>
                                        </div>
                                        <div class="col-md-6">
                                            <div id="Divdropzone" class=" dropzone" action="~/GroupLifeInsurance/ProducerMaster/SaveUploadedFile">
                                                <div id="tabs-3">
                                                    <div class="row field ">
                                                        <div id="dropzoneWrapper" class="dz-default dz-message col-12">
                                                            <i class="mdi mdi-cloud-upload font-size-30 text-muted"></i>
                                                            <h5>Drop files here or click to Upload</h5>
                                                            <div id="dropZoneContainer">

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-b-15">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <label class="col-form-label text-md-right w-full">Producer Status</label>
                                        </div>
                                        <div class="col-md-6 d-flex align-items-center">
                                            <div class="checkbox switcher">
                                                <label for="switchStatus" class="mb-0">
                                                    <input type="checkbox" id="switchStatus" checked="checked" value="">
                                                    <span><small></small></span>
                                                    @*<small>Currently Disabled</small>*@
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group m-b-15">
                            <div class="row">
                                <div class="col-md-12 text-center ">
                                    <input type="submit" id="btnSubmitProducerMaster" value="Create" class="btn btn-primary m-20" />
                                    <button class="btn btn-primary-login m-20" type="button" data-toggle="modal" data-target="#uploadBulk">
                                        <i class="mdi mdi-cloud-upload"></i> Bulk Upload Policy
                                    </button>
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="hdnProducerMasterID" value="0">
                    </form>
                </div>
                <div id="navpills2-2" class="tab-pane ">
                    <div class="card no-shadow">
                        <div class="card-body form-horizontal">
                            <div class="row ">
                                <div class="col-md-3">
                                    @Html.TextBox("txtProducerName", "", new { @class = "form-control w-full", @placeholder = "Enter an Producer Master Name" })
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("txtProducerMasterCode", "", new { @class = "form-control w-full", @placeholder = "Enter an Producer Master Code" })
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("txtProducerMasterCity", "", new { @class = "form-control w-full", @placeholder = "Enter an Producer Master City" })
                                </div>
                                <div class="col-md-3">
                                    <input type="hidden" id="PMFolderName" value='@TempData["PMFolderName"]' />
                                    <button type="button" id="btnSearch" class="btn btn-block btn-primary"><i class="fa fa-search mr-3"></i>Search</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <h5>Search Results:</h5>
                    <br />
                    <div class="table-responsive">
                        <table id="tblPmMaster" class="table table-hover">
                            <tr>
                                <th>Producer Name</th>
                                <th>Producer Code</th>
                                <th>Contact Person</th>
                                <th>Mobile Number</th>
                                <th>Email Id</th>
                                <th>[Address]</th>
                                <th>City</th>
                                <th>[State]</th>
                                <th>KYC Document</th>
                                <th class="text-center">Actions</th>
                            </tr>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="box-footer text-right hide">
            <button class="btn btn-rounded btn-primary">Submit</button>
            <button class="btn btn-rounded btn-secondary">Cancel</button>
        </div>
    </div>
</div>

@using (Html.BeginForm("BulkUpdate", "ProducerMaster", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<div id="uploadBulk" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="uploadBulkLabel">Upload Bulk Policies</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-10 mx-auto">
                        <div class="text-right">

                            <a href="~/Masters/ProducerMaster.csv" class="btn btn-dark btn-sm" download>
                                <i class="mdi mdi-download"></i> Download Sample format
                            </a>
                        </div>
                        <div class="fileuploader fileuploader-theme-dragdrop">

                            <input type="file" name="PMCSVFile" id="fileUploadPM" accept=".csv" />
                            @*<input type="hidden" id="txtMotorMaster" name="txtMotorMaster" value="1">
                                <input type="hidden" id="uploadFilesInptHdn" name="fileuploader-list-files" value="[]">
                                <input type="file" id="uploadFilesInpt" name="files[]" multiple="multiple" style="position: absolute; z-index: -9999; height: 0px; width: 0px; padding: 0px; margin: 0px; line-height: 0; outline: 0px; border: 0px; opacity: 0;">
                                <div class="fileuploader-input">
                                    <div class="fileuploader-input-inner">
                                        <div class="fileuploader-icon-main"></div>
                                        <h3 class="fileuploader-input-caption">
                                            <span>Drag and drop files here</span>
                                        </h3>
                                        <p></p>
                                        <button type="button" class="fileuploader-input-button">
                                            <span>Browse files</span>
                                        </button>
                                    </div>
                                </div>
                                <div class="fileuploader-items">
                                    <ul class="fileuploader-items-list">
                                        <li class="fileuploader-item file-type-application file-ext-xlsx file-has-popup upload-successful">
                                            <div id="fileContainer" class="columns" style="display: none;">
                                                <div class="column-thumbnail">
                                                    <div class="fileuploader-item-image fileuploader-no-thumbnail">
                                                        <div style="background-color: #591605" class="fileuploader-item-icon">
                                                            <i>xlsx</i>
                                                        </div>
                                                    </div>
                                                    <span class="fileuploader-action-popup"></span>
                                                </div>
                                                <div class="column-title">
                                                    <div id="fileName">SampleFile.xlsx</div>
                                                    <span id="fileSize">0 KB</span>
                                                </div>
                                                <div class="column-actions">
                                                    <button type="button" id="clearFiles" class="btn btn-success btn-sm round" title="Delete">
                                                        <i class="fas fa-check fa-sm"></i>
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="progress-bar2" style="display: none;">
                                                <div class="fileuploader-progressbar">
                                                    <div class="bar" style="width: 100%;"></div>
                                                </div>
                                                <span>100%</span>
                                            </div>
                                        </li>
                                    </ul>
                                </div>*@
                            <div class="mt-2">
                                <i class="fas fa-upload fa-sm btn btn-success btn-block" onclick="csvFileUpload();">
                                    <span>Upload</span>
                                </i>
                                <button id="uploadMotorPolicies" class="btn btn-primary btn-sm mx-1 hide">Upload File</button>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
}

                <script type="text/javascript">

                    $(document).ready(function () {

                        //txtProducerMasterCity
                        $("#txtProducerName").autocomplete({
                            minLength: 2,
                            autoFocus: true,
                            open: function () { $($('.ui-autocomplete')).css('width', '300px'); },
                            source: function (request, response) {
                                var param = { prefixText: $('#txtProducerName').val(), Action: "PMName" };

                                $.ajax({
                                    url: "/GroupLifeInsurance/ProducerMaster/GetAutocompleteProducerName_Code_City",
                                    data: JSON.stringify(param),
                                    dataType: "json",
                                    type: "POST",
                                    contentType: "application/json; charset=utf-8",

                                    success: function (data) {
                                        response($.map(data, function (item) {
                                            return {
                                                label: item.ProducerName,
                                                value: item.ProducerName
                                            }
                                        }))
                                    },
                                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                                        var err = eval("(" + XMLHttpRequest.responseText + ")");
                                        //alert(err.Message)
                                        console.log("Ajax Error!");
                                    }
                                });
                            },
                            //select: function (e, i) {
                            //    $("#txtSeaRIMaster").val(i.item.label);
                            //    return false;
                            //},
                        });

                        $("#txtProducerMasterCode").autocomplete({
                            minLength: 2,
                            autoFocus: true,
                            open: function () { $($('.ui-autocomplete')).css('width', '300px'); },
                            source: function (request, response) {
                                var param = { prefixText: $('#txtProducerMasterCode').val(), Action: "PMCode" };

                                $.ajax({
                                    url: "/GroupLifeInsurance/ProducerMaster/GetAutocompleteProducerName_Code_City",
                                    data: JSON.stringify(param),
                                    dataType: "json",
                                    type: "POST",
                                    contentType: "application/json; charset=utf-8",

                                    success: function (data) {
                                        response($.map(data, function (item) {
                                            return {
                                                label: item.ProducerCode,
                                                value: item.ProducerCode
                                            }
                                        }))
                                    },
                                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                                        var err = eval("(" + XMLHttpRequest.responseText + ")");
                                        //alert(err.Message)
                                        console.log("Ajax Error!");
                                    }
                                });
                            },
                            //select: function (e, i) {
                            //    $("#txtSeaRIMaster").val(i.item.label);
                            //    return false;
                            //},
                        });

                        $('#btnSubmitProducerMaster').on('click', function () {

                            if ($.trim($('#MasterType :selected').val()) == "") {
                                alert("Please select MasterType");
                                $("#MasterType").focus();
                                return false;
                            }

                            if ($.trim($("#txtProducerMaster").val()) == "") {
                                alert("Please enter ProducerMaster");
                                $("#ProducerMaster").focus();
                                return false;
                            }
                            if ($.trim($("#txtContactPerson").val()) == "") {
                                alert("Please enter ContactPerson");
                                $("#txtContactPerson").focus();
                                return false;
                            }
                            if ($.trim($("#txtMobileNumber").val()) == "") {
                                alert("Please enter MobileNumber");
                                $("#txtMobileNumber").focus();
                                return false;
                            }
                            if ($.trim($("#txtEmailId").val()) == "") {
                                alert("Please enter EmailID");
                                $("#txtEmailId").focus();
                                return false;
                            }
                            if ($.trim($("#txtAddress").val()) == "") {
                                alert("Please enter Address");
                                $("#txtAddress").focus();
                                return false;
                            }
                            if ($.trim($("#txtCity").val()) == "") {
                                alert("Please enter City");
                                $("#txtCity").focus();
                                return false;
                            }
                            if ($.trim($("#txtState").val()) == "") {
                                alert("Please enter State");
                                $("#txtState").focus();
                                return false;
                            }
                            if ($.trim($("#txtZipcode").val()) == "") {
                                alert("Please enter Zipcode");
                                return false;
                            }
                            if ($.trim($('#BankName :selected').val()) == "") {
                                alert("Please select BankName");
                                $("#BankName").focus();
                                return false;
                            }

                            if ($.trim($("#txtAccountNumber").val()) == "") {
                                alert("Please enter Account Number");
                                $("#txtAccountNumber").focus();
                                return false;
                            }
                            if ($.trim($("#txtRepeatAccountNumber").val()) == "") {
                                alert("Please enter Repeat Account Number");
                                $("#txtRepeatAccountNumber").focus();
                                return false;
                            }
                            //switchStatus

                            if ($.trim($("#AccountNumber").val()) != "" && $.trim($("#RepeatAccountNumber").val()) != "") {

                                if ($.trim($("#AccountNumber").val()) != $.trim($("#RepeatAccountNumber").val())) {
                                    $("#RepeatAccountNumber").val("");
                                    $("#RepeatAccountNumber").focus();
                                    alert("Please check,Account Number is not match");

                                    return false;
                                }
                            }
                            if ($.trim($("#txtIFSCCode").val()) == "") {
                                alert("Please enter IFSCCode");
                                $("#IFSCCode").focus();
                                return false;
                            }
                            if ($("#btnSubmitProducerMaster").val() != "Update" && Dropzone.forElement("#Divdropzone").files.length == 0) {
                                alert("Please Upload the files");
                                return false;
                            }

                            var status = "";
                            if ($('input:checkbox[id=switchStatus]').is(':checked') == true) {
                                status = 'A';
                            }
                            else { status = 'D' };

                            var objProducerMaster = new Object();

                            objProducerMaster.ProducerMasterID = $("#hdnProducerMasterID").val();
                            objProducerMaster.BusinessDesignationTypeMasterID = $('#MasterType :selected').val();

                            objProducerMaster.ProducerName = $("#txtProducerMaster").val();
                            objProducerMaster.ContactPerson = $("#txtContactPerson").val();
                            objProducerMaster.MobileNumber = $("#txtMobileNumber").val();
                            objProducerMaster.EmailId = $("#txtEmailId").val();
                            objProducerMaster.Address = $("#txtAddress").val();
                            objProducerMaster.City = $("#txtCity").val();
                            objProducerMaster.State = $("#txtState").val();
                            objProducerMaster.Zipcode = $("#txtIFSCCode").val();

                            objProducerMaster.BankName = $('#BankName :selected').text();
                            objProducerMaster.BankID = $('#BankName :selected').val();
                            objProducerMaster.AccountNumber = $("#txtAccountNumber").val();
                            objProducerMaster.IFSCCode = $("#txtIFSCCode").val();
                            objProducerMaster.Status = status;

                            var param = {
                                objProducerMaster: objProducerMaster, Action: $("#btnSubmitProducerMaster").val(), FolderName: $("#PMFolderName").val()
                            };

                            $.ajax({
                                type: "POST",
                                url: "/GroupLifeInsurance/ProducerMaster/AddUpdateProducerMaster",
                                dataType: "json",
                                contentType: 'application/json',
                                data: JSON.stringify(param),
                                success: function (res) {
                                    //$('#formRenewal').reset();
                                },
                                error: function () {
                                    //$('#formRIMaster').reset();
                                }
                            })
                        });

                        $('#btnSearch').on('click', function () {

                            var param = { PMName: $('#txtProducerName').val(), PMCode: $('#txtProducerMasterCode').val(), City: $('#txtProducerMasterCity').val() };
                            $("#tblPmMaster").find("tr:not(:first)").remove();

                            $.ajax({

                                type: "GET",
                                url: "/GroupLifeInsurance/ProducerMaster/GetPMMaster",
                                dataType: "json",
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                data: param,
                                success: function (Result) {

                                    if (Result[0].ProducerName != "NoRecordsFound") {
                                        var i = 0;
                                        $.each(Result, function (key, value) {
                                            i++;
                                            var hdnID = "hdnobjJSonVal_" + i;
                                            var JVal = JSON.stringify(value);
                                            $('#tblPmMaster').append('<tr> <td>' + value.ProducerName + '</td>  <td>' + value.ProducerCode + '</td> <td>' + value.ContactPerson + '</td> <td>' + value.MobileNumber + '</td><td>' + value.EmailId + '</td> <td>' + value.Address + '</td> <td>' + value.City + '</td><td>' + value.State + '</td><td> <a href="' + value.KYCUploadPath + '" class="badge badge-pill badge-warning" download> Download KYC</a></td><td class="text-center"><i class="mdi mdi-pencil text-primary mx-3" onclick="EditPMMaster(' + "'" + hdnID + "'" + ')"></i><i class="mdi mdi-delete text-danger mx-3" onclick="DeActivePMMaster(this,' + value.ProducerMasterID.toString() + ');"></i><input type="hidden" id=' + hdnID + ' value=' + "'" + JVal + "'" + '></td></tr>');
                                        })
                                    }
                                    else {
                                        $('#tblPmMaster').append('<tr> <td colspan="10" aligen="center" > No Records found </td></tr>');
                                    }

                                },
                                error: function () {
                                    // $("#lblMessage").html('Error while Registring the Company!.');
                                }
                            })
                        });
                    });

                    function DeActivePMMaster(obj, PMID) {

                        var PMDs = '' + PMID;
                        var param = { PMMasterID: PMDs };
                        $.ajax({
                            type: "POST",
                            url: "/GroupLifeInsurance/ProducerMaster/DeactivatePMMaster",
                            dataType: "json",
                            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                            data: param,
                            success: function (Result) {
                                if (Result == "DeActivated") {
                                    $(obj).closest('tr').remove();
                                    alert("DeActivated successfully");
                                    return false;
                                }
                                else { alert(Result); }
                            },
                            error: function () {
                                console.log('Error while Registring the Company!.');
                            }
                        })

                    }

                    function EditPMMaster(JsonObj) {


                        $("#anavpills2-2").removeClass("active");
                        $("#navpills2-2").removeClass("active");

                        $("#anavpills2-1").addClass("active");
                        $("#navpills2-1").addClass("active");

                        var objRow = JSON.parse($("#" + JsonObj).val());

                        $('#MasterType').val(objRow.BusinessDesignationTypeMasterID);
                        $("#txtProducerMaster").val(objRow.ProducerName);
                        $("#txtContactPerson").val(objRow.ContactPerson);
                        $("#txtMobileNumber").val(objRow.MobileNumber);
                        $("#txtEmailId").val(objRow.EmailId);
                        $("#txtAddress").val(objRow.Address);
                        $("#txtCity").val(objRow.City);
                        $("#txtState").val(objRow.State);
                        $("#txtZipcode").val(objRow.Zipcode);

                        $('#BankName').val(objRow.BankID);
                        $("#txtAccountNumber").val(objRow.AccountNumber);
                        $("#txtRepeatAccountNumber").val(objRow.AccountNumber);
                        $("#txtIFSCCode").val(objRow.IFSCCode);
                        $("#hdnProducerMasterID").val(objRow.ProducerMasterID);


                        if (objRow.Status == "A") {
                            $("#switchStatus").prop('checked', true);
                        }
                        else {
                            $("#switchStatus").prop('checked', false);
                        }

                        $("#btnSubmitProducerMaster").val("Update");

                    }

                    function csvFileUpload() {

                        var ddlBusinessType = [];

                        for (i = 0; i < $("#MasterType option").length; i++) {

                            if (i > 0) {
                                ddlBusinessType.push({
                                    BusinessTypeName: $("#MasterType option")[i].text
                                });                            
                            }
                        }

                        var ddlBankMaster = [];

                        for (i = 0; i < $("#BankName option").length; i++) {

                            if (i > 0) {
                                ddlBankMaster.push({
                                    BankName: $("#BankName option")[i].text
                                });
                            }
                        }


                        var rowCount = 0;
                        var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.csv|.txt)$/;
                        if (regex.test($("#fileUploadPM").val().toLowerCase())) {

                            if (typeof (FileReader) != "undefined") {
                                var reader = new FileReader();
                                reader.onload = function (e) {

                                    var rows = e.target.result.split('\r\n');

                                    for (var i = 0; i < rows.length; i++) {

                                        var cells = rows[i].split(",");
                                        var RRC = rowCount + 1;
                                        if (i == 0) {


                                            // Heater validation
                                            if (cells.length == 12) {

                                                if (cells[0] != "BusinessType") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (BusinessType).");
                                                    return false;
                                                }
                                                if (cells[1] != "Name") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (Name).");
                                                    return false;
                                                }
                                                if (cells[2] != "ContactPerson") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (ContactPerson).");
                                                    return false;
                                                }
                                                if (cells[3] != "MobileNumber") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (MobileNumber).");
                                                    return false;
                                                }
                                                if (cells[4] != "EmailId") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (EmailId).");
                                                    return false;
                                                }
                                                if (cells[5] != "Address") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (Address).");
                                                    return false;
                                                }
                                                if (cells[6] != "City") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (City).");
                                                    return false;
                                                }
                                                if (cells[7] != "State") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (State).");
                                                    return false;
                                                }
                                                if (cells[8] != "Zipcode") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (Zipcode).");
                                                    return false;
                                                }

                                                if (cells[9] != "BankName") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (BankName).");
                                                    return false;
                                                }
                                                if (cells[10] != "AccountNumber") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (AccountNumber).");
                                                    return false;
                                                }
                                                if (cells[11] != "IFSCCode") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check column name mismatch (IFSCCode).");
                                                    return false;
                                                }


                                            }
                                            else {
                                                $('#fileUploadPM').val('');
                                                alert("Upload Csv file invalid template , Please check .");
                                                return false;
                                            }

                                        } else {
                                            // Row validation
                                            if (cells.length == 12) {

                                                if (cells[0] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " BusinessType  is empty");
                                                    return false;
                                                }
                                                else {
                                                    var returnedData = $.grep(ddlBusinessType, function (element, index) {
                                                        return $.trim(element.BusinessTypeName) == $.trim(cells[0]);
                                                    });
                                                    if (returnedData.length <= 0) {
                                                        alert("Please check Row NO : " + RRC + " BusinessType  is not matching to BusinessTypeMaster");
                                                        return false;
                                                    }

                                                }

                                                if (cells[1] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " Name is empty");
                                                    return false;
                                                }

                                                if (cells[2] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " ContactPerson  is empty");
                                                    return false;
                                                }

                                                if (cells[3] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " MobileNumber is empty");
                                                    return false;
                                                }

                                                if (cells[4] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " EmailId is empty");
                                                    return false;
                                                }
                                                if (cells[5] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " Address is empty");
                                                    return false;
                                                }

                                                if (cells[6] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " City is empty");
                                                    return false;
                                                }
                                                if (cells[7] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " State is empty");
                                                    return false;
                                                }
                                                if (cells[8] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " Zipcode is empty");
                                                    return false;
                                                }
                                                if (cells[9] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " Bank is empty");
                                                    return false;
                                                }
                                                else {
                                                   
                                                    var BankData = $.grep(ddlBankMaster, function (element, index) {
                                                            return $.trim(element.BankName) == $.trim(cells[9]);
                                                        });
                                                    if (BankData.length <= 0) {
                                                        alert("Please check Row NO : " + RRC + " BankName  is not matching to BankNameMaster");
                                                            return false;
                                                        }

                                                    
                                                }
                                                if (cells[10] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " AccountNumber is empty");
                                                    return false;
                                                }
                                                if (cells[11] == "") {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " IFSCCode is empty");
                                                    return false;
                                                }

                                            }
                                            else {

                                                if (cells.length > 1) {
                                                    $('#fileUploadPM').val('');
                                                    alert("Please check Row NO : " + RRC + " This row have comma simple or invalied Column length");
                                                    return false;
                                                }
                                            }

                                        }

                                        rowCount += 1;

                                    }

                                    if (rowCount == rows.length) {
                                        // $("#hdnMsgStatus").val('Y');
                                        $("#uploadMotorPolicies").click();
                                    }

                                }
                                reader.readAsText($("#fileUploadPM")[0].files[0]);
                            } else {
                                $('#fileUploadPM').val('');
                                alert("This browser does not support HTML5.");
                                return false;
                            }
                        } else {
                            $('#fileUploadPM').val('');
                            alert("Please upload a valid CSV file.");
                            return false;

                        }
                    }
                </script>



    @section scripts {

        <script type="text/javascript">

            Dropzone.options.Divdropzone = {
                maxFiles: 5,
                acceptedFiles: 'image/*',
                maxFilesize: 2, // max file size in MB,
                addRemoveLinks: true,
                //  autoProcessQueue: false,
                init: function () {
                    //this.on("complete", function (data) {
                    //    //var res = eval('(' + data.xhr.responseText + ')');
                    //    var res = JSON.parse(data.xhr.responseText);
                    //}),
                    this.on("error", function (file, message) {
                        alert(message + " because already reached maxmim file limt (3) or invalid file extension");
                        this.removeFile(file);
                    });


                },
                //thumbnail: function (file, dataUrl) {
                //    // Display the image in your file.previewElement
                //    if (file.accepted == false) {
                //        this.removeFile(file);
                //    }
                //},
            };
        </script>
    }